name: Render Diagrams

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - 'develop'
      - 'main'
  pull_request:
    branches-ignore:
      - 'develop'
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install mermaid
        run: npm install mermaid mermaid.cli

      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet

      # mermaid.cli appears to have an old version of mermaid.min.js.  Swapping with version in mermaid
      # for more feature, although mermaid doesn't seem to have the same as mermaid.live
      # Seems like this might break at some point...
      - name: Update mermaid.cli
        run: cp node_modules/mermaid/dist/mermaid.min.js node_modules/mermaid.cli/

      # When mermaid.cli renders the svg it uses a random id.  This would cause the svg to always be updated,
      # removing the usefulness of generating the diagram from code in terms of source control history.
      # Therefore this finds and updates the ID to be a constant. 
      - name: Render mermaid diagrams
        run: |
          for f in docs/scripts/*.mmd; \
          do IMAGEFILE=docs/scripts/rendered-diagrams/$(basename $f | cut -f 1 -d '.').svg; \
          node_modules/.bin/mmdc -i $f -o $IMAGEFILE; \
          MERMAIDID=$(xmlstarlet sel -t -v '(//@id)[1]' -n $IMAGEFILE); \
          sed -i 's/'$MERMAIDID'/mermaid-0000000000000/g' $IMAGEFILE; done

      - name: Update repo
        run: |
          git config --global user.email 'ci@render.diagrams'; \
          git config --global user.name 'Diagram Pipeline'; \
          git add docs/scripts/rendered-diagrams/*.svg; \
          git config --global status.showUntrackedFiles no  # Ignore untracked files
          if [[ `git status --porcelain` ]]; then           # Check if anything to commit
            git commit -m 'Auto render'; \
            git push origin $(sed -e 's#.*remotes/origin/\(\)#\1#' <<< $GITHUB_REF);
          fi
